<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="5" passed="4" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-05-08T10:58:59 IST" name="Default suite" finished-at="2024-05-08T10:59:06 IST" duration-ms="6985">
    <groups>
    </groups>
    <test started-at="2024-05-08T10:58:59 IST" name="Default test" finished-at="2024-05-08T10:59:06 IST" duration-ms="6985">
      <class name="com.restAssured.automaiton.GetOrderWithAccessToken">
        <test-method is-config="true" signature="connect()[pri:0, instance:com.restAssured.automaiton.GetOrderWithAccessToken@5562c41e]" started-at="2024-05-08T10:58:59 IST" name="connect" finished-at="2024-05-08T10:59:00 IST" duration-ms="800" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- connect -->
        <test-method signature="createAccessToken()[pri:0, instance:com.restAssured.automaiton.GetOrderWithAccessToken@5562c41e]" started-at="2024-05-08T10:59:00 IST" name="createAccessToken" finished-at="2024-05-08T10:59:03 IST" duration-ms="3291" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createAccessToken -->
        <test-method signature="createOrder()[pri:0, instance:com.restAssured.automaiton.GetOrderWithAccessToken@5562c41e]" started-at="2024-05-08T10:59:03 IST" name="createOrder" finished-at="2024-05-08T10:59:03 IST" duration-ms="12" status="FAIL">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Header value cannot be null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Header value cannot be null
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:60)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:86)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.common.assertion.AssertParameter.notNull(AssertParameter.groovy:26)
at io.restassured.internal.common.assertion.AssertParameter$notNull.callStatic(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallStatic(CallSiteArray.java:53)
at io.restassured.internal.common.assertion.AssertParameter$notNull.callStatic(Unknown Source)
at io.restassured.internal.RequestSpecificationImpl.header(RequestSpecificationImpl.groovy:869)
at com.restAssured.automaiton.GetOrderWithAccessToken.createOrder(GetOrderWithAccessToken.java:50)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createOrder -->
        <test-method signature="getOrder()[pri:0, instance:com.restAssured.automaiton.GetOrderWithAccessToken@5562c41e]" started-at="2024-05-08T10:59:03 IST" name="getOrder" finished-at="2024-05-08T10:59:05 IST" duration-ms="1467" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getOrder -->
        <test-method signature="getOrderJSONFile()[pri:0, instance:com.restAssured.automaiton.GetOrderWithAccessToken@5562c41e]" started-at="2024-05-08T10:59:05 IST" name="getOrderJSONFile" finished-at="2024-05-08T10:59:06 IST" duration-ms="1351" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getOrderJSONFile -->
        <test-method signature="readingJSONFile()[pri:0, instance:com.restAssured.automaiton.GetOrderWithAccessToken@5562c41e]" started-at="2024-05-08T10:59:06 IST" name="readingJSONFile" finished-at="2024-05-08T10:59:06 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readingJSONFile -->
      </class> <!-- com.restAssured.automaiton.GetOrderWithAccessToken -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
