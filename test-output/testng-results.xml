<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="10" passed="8" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-06-25T20:08:12 IST" name="Automation-Suite" finished-at="2024-06-25T20:08:45 IST" duration-ms="32690">
    <groups>
    </groups>
    <test started-at="2024-06-25T20:08:12 IST" name="Sanity" finished-at="2024-06-25T20:08:44 IST" duration-ms="32296">
      <class name="com.mycompany.selenium.DemoQATest1">
        <test-method is-config="true" signature="navigateToUrl()[pri:0, instance:com.mycompany.selenium.DemoQATest1@6bff19ff]" started-at="2024-06-25T20:08:12 IST" name="navigateToUrl" finished-at="2024-06-25T20:08:40 IST" duration-ms="28533" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateToUrl -->
        <test-method signature="fillTheForm()[pri:0, instance:com.mycompany.selenium.DemoQATest1@6bff19ff]" started-at="2024-06-25T20:08:41 IST" name="fillTheForm" finished-at="2024-06-25T20:08:43 IST" duration-ms="2252" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[failed case Demo expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: failed case Demo expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:751)
at com.mycompany.selenium.DemoQATest1.fillTheForm(DemoQATest1.java:37)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fillTheForm -->
        <test-method is-config="true" signature="close()[pri:0, instance:com.mycompany.selenium.DemoQATest1@6bff19ff]" started-at="2024-06-25T20:08:44 IST" name="close" finished-at="2024-06-25T20:08:44 IST" duration-ms="755" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
      </class> <!-- com.mycompany.selenium.DemoQATest1 -->
      <class name="testNGDemo.TestNGDemo">
        <test-method is-config="true" signature="beforeTestClassone()[pri:0, instance:testNGDemo.TestNGDemo@6719a5b8]" started-at="2024-06-25T20:08:40 IST" name="beforeTestClassone" finished-at="2024-06-25T20:08:41 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTestClassone -->
        <test-method is-config="true" signature="beforeClassTestClassOne()[pri:0, instance:testNGDemo.TestNGDemo@6719a5b8]" started-at="2024-06-25T20:08:41 IST" name="beforeClassTestClassOne" finished-at="2024-06-25T20:08:41 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassTestClassOne -->
        <test-method is-config="true" signature="beforeMethodClassone()[pri:0, instance:testNGDemo.TestNGDemo@6719a5b8]" started-at="2024-06-25T20:08:41 IST" name="beforeMethodClassone" finished-at="2024-06-25T20:08:41 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethodClassone -->
        <test-method signature="test1Class1()[pri:0, instance:testNGDemo.TestNGDemo@6719a5b8]" started-at="2024-06-25T20:08:41 IST" name="test1Class1" finished-at="2024-06-25T20:08:41 IST" duration-ms="24" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1Class1 -->
        <test-method is-config="true" signature="afterMethodClassOne()[pri:0, instance:testNGDemo.TestNGDemo@6719a5b8]" started-at="2024-06-25T20:08:41 IST" name="afterMethodClassOne" finished-at="2024-06-25T20:08:41 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethodClassOne -->
        <test-method is-config="true" signature="beforeMethodClassone()[pri:0, instance:testNGDemo.TestNGDemo@6719a5b8]" started-at="2024-06-25T20:08:41 IST" name="beforeMethodClassone" finished-at="2024-06-25T20:08:41 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethodClassone -->
        <test-method signature="test2Class1()[pri:0, instance:testNGDemo.TestNGDemo@6719a5b8]" started-at="2024-06-25T20:08:41 IST" name="test2Class1" finished-at="2024-06-25T20:08:41 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2Class1 -->
        <test-method is-config="true" signature="beforeMethodClassone()[pri:0, instance:testNGDemo.TestNGDemo@6719a5b8]" started-at="2024-06-25T20:08:41 IST" name="beforeMethodClassone" finished-at="2024-06-25T20:08:41 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethodClassone -->
        <test-method is-config="true" signature="afterMethodClassOne()[pri:0, instance:testNGDemo.TestNGDemo@6719a5b8]" started-at="2024-06-25T20:08:41 IST" name="afterMethodClassOne" finished-at="2024-06-25T20:08:41 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethodClassOne -->
        <test-method signature="test3Class1()[pri:0, instance:testNGDemo.TestNGDemo@6719a5b8]" started-at="2024-06-25T20:08:41 IST" name="test3Class1" finished-at="2024-06-25T20:08:41 IST" duration-ms="14" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Failed demo case expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Failed demo case expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:751)
at testNGDemo.TestNGDemo.test3Class1(TestNGDemo.java:55)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3Class1 -->
        <test-method is-config="true" signature="afterMethodClassOne()[pri:0, instance:testNGDemo.TestNGDemo@6719a5b8]" started-at="2024-06-25T20:08:41 IST" name="afterMethodClassOne" finished-at="2024-06-25T20:08:41 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethodClassOne -->
        <test-method is-config="true" signature="afterClassTestClassOne()[pri:0, instance:testNGDemo.TestNGDemo@6719a5b8]" started-at="2024-06-25T20:08:41 IST" name="afterClassTestClassOne" finished-at="2024-06-25T20:08:41 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassTestClassOne -->
        <test-method is-config="true" signature="afterTestClassone()[pri:0, instance:testNGDemo.TestNGDemo@6719a5b8]" started-at="2024-06-25T20:08:44 IST" name="afterTestClassone" finished-at="2024-06-25T20:08:44 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTestClassone -->
      </class> <!-- testNGDemo.TestNGDemo -->
      <class name="testNGDemo.TestngDemo1">
        <test-method is-config="true" signature="beforeTestClass2()[pri:0, instance:testNGDemo.TestngDemo1@3eb631b8]" started-at="2024-06-25T20:08:41 IST" name="beforeTestClass2" finished-at="2024-06-25T20:08:41 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTestClass2 -->
        <test-method is-config="true" signature="beforeClassTest()[pri:0, instance:testNGDemo.TestngDemo1@3eb631b8]" started-at="2024-06-25T20:08:41 IST" name="beforeClassTest" finished-at="2024-06-25T20:08:41 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassTest -->
        <test-method signature="testcaseOneClass1()[pri:0, instance:testNGDemo.TestngDemo1@3eb631b8]" started-at="2024-06-25T20:08:41 IST" name="testcaseOneClass1" finished-at="2024-06-25T20:08:41 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcaseOneClass1 -->
        <test-method signature="testcaseTwoClass2()[pri:0, instance:testNGDemo.TestngDemo1@3eb631b8]" started-at="2024-06-25T20:08:41 IST" name="testcaseTwoClass2" finished-at="2024-06-25T20:08:41 IST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcaseTwoClass2 -->
        <test-method is-config="true" signature="afterClassTest()[pri:0, instance:testNGDemo.TestngDemo1@3eb631b8]" started-at="2024-06-25T20:08:41 IST" name="afterClassTest" finished-at="2024-06-25T20:08:41 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassTest -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:testNGDemo.TestngDemo1@3eb631b8]" started-at="2024-06-25T20:08:44 IST" name="afterTest" finished-at="2024-06-25T20:08:44 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- testNGDemo.TestngDemo1 -->
      <class name="testNGDemo.TestngDemo2">
        <test-method is-config="true" signature="beforeTestClass2()[pri:0, instance:testNGDemo.TestngDemo2@796d3c9f]" started-at="2024-06-25T20:08:41 IST" name="beforeTestClass2" finished-at="2024-06-25T20:08:41 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTestClass2 -->
        <test-method is-config="true" signature="beforeClassTest()[pri:0, instance:testNGDemo.TestngDemo2@796d3c9f]" started-at="2024-06-25T20:08:41 IST" name="beforeClassTest" finished-at="2024-06-25T20:08:41 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassTest -->
        <test-method signature="testcaseOneClass1()[pri:0, instance:testNGDemo.TestngDemo2@796d3c9f]" started-at="2024-06-25T20:08:41 IST" name="testcaseOneClass1" finished-at="2024-06-25T20:08:41 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcaseOneClass1 -->
        <test-method signature="testcaseTwoClass2()[pri:0, instance:testNGDemo.TestngDemo2@796d3c9f]" started-at="2024-06-25T20:08:41 IST" name="testcaseTwoClass2" finished-at="2024-06-25T20:08:41 IST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcaseTwoClass2 -->
        <test-method is-config="true" signature="afterClassTest()[pri:0, instance:testNGDemo.TestngDemo2@796d3c9f]" started-at="2024-06-25T20:08:41 IST" name="afterClassTest" finished-at="2024-06-25T20:08:41 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassTest -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:testNGDemo.TestngDemo2@796d3c9f]" started-at="2024-06-25T20:08:44 IST" name="afterTest" finished-at="2024-06-25T20:08:44 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- testNGDemo.TestngDemo2 -->
    </test> <!-- Sanity -->
    <test started-at="2024-06-25T20:08:45 IST" name="Regression" finished-at="2024-06-25T20:08:45 IST" duration-ms="6">
      <class name="testNGDemo.TestNGDemo">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:testNGDemo.TestNGDemo@6719a5b8]" started-at="2024-06-25T20:08:12 IST" name="beforeSuite" finished-at="2024-06-25T20:08:12 IST" duration-ms="122" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method is-config="true" signature="beforeSuiteTest()[pri:0, instance:testNGDemo.TestNGDemo@6719a5b8]" started-at="2024-06-25T20:08:12 IST" name="beforeSuiteTest" finished-at="2024-06-25T20:08:12 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuiteTest -->
        <test-method is-config="true" signature="AfterSuiteTest()[pri:0, instance:testNGDemo.TestNGDemo@6719a5b8]" started-at="2024-06-25T20:08:45 IST" name="AfterSuiteTest" finished-at="2024-06-25T20:08:45 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterSuiteTest -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:testNGDemo.TestNGDemo@6719a5b8]" started-at="2024-06-25T20:08:45 IST" name="afterSuite" finished-at="2024-06-25T20:08:45 IST" duration-ms="383" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- testNGDemo.TestNGDemo -->
      <class name="testNGDemo.TestngDemo1">
        <test-method is-config="true" signature="beforeSuiteClass2()[pri:0, instance:testNGDemo.TestngDemo1@3eb631b8]" started-at="2024-06-25T20:08:12 IST" name="beforeSuiteClass2" finished-at="2024-06-25T20:08:12 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuiteClass2 -->
        <test-method is-config="true" signature="afterSuiteClass2()[pri:0, instance:testNGDemo.TestngDemo1@3eb631b8]" started-at="2024-06-25T20:08:45 IST" name="afterSuiteClass2" finished-at="2024-06-25T20:08:45 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuiteClass2 -->
      </class> <!-- testNGDemo.TestngDemo1 -->
      <class name="testNGDemo.TestngDemo2">
        <test-method is-config="true" signature="beforeSuiteClass2()[pri:0, instance:testNGDemo.TestngDemo2@a619c2]" started-at="2024-06-25T20:08:12 IST" name="beforeSuiteClass2" finished-at="2024-06-25T20:08:12 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuiteClass2 -->
        <test-method is-config="true" signature="beforeTestClass2()[pri:0, instance:testNGDemo.TestngDemo2@a619c2]" started-at="2024-06-25T20:08:45 IST" name="beforeTestClass2" finished-at="2024-06-25T20:08:45 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTestClass2 -->
        <test-method is-config="true" signature="beforeClassTest()[pri:0, instance:testNGDemo.TestngDemo2@a619c2]" started-at="2024-06-25T20:08:45 IST" name="beforeClassTest" finished-at="2024-06-25T20:08:45 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassTest -->
        <test-method signature="testcaseOneClass1()[pri:0, instance:testNGDemo.TestngDemo2@a619c2]" started-at="2024-06-25T20:08:45 IST" name="testcaseOneClass1" finished-at="2024-06-25T20:08:45 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcaseOneClass1 -->
        <test-method signature="testcaseTwoClass2()[pri:0, instance:testNGDemo.TestngDemo2@a619c2]" started-at="2024-06-25T20:08:45 IST" name="testcaseTwoClass2" finished-at="2024-06-25T20:08:45 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcaseTwoClass2 -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:testNGDemo.TestngDemo2@a619c2]" started-at="2024-06-25T20:08:45 IST" name="afterTest" finished-at="2024-06-25T20:08:45 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="afterClassTest()[pri:0, instance:testNGDemo.TestngDemo2@a619c2]" started-at="2024-06-25T20:08:45 IST" name="afterClassTest" finished-at="2024-06-25T20:08:45 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassTest -->
        <test-method is-config="true" signature="afterSuiteClass2()[pri:0, instance:testNGDemo.TestngDemo2@a619c2]" started-at="2024-06-25T20:08:45 IST" name="afterSuiteClass2" finished-at="2024-06-25T20:08:45 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuiteClass2 -->
      </class> <!-- testNGDemo.TestngDemo2 -->
    </test> <!-- Regression -->
  </suite> <!-- Automation-Suite -->
</testng-results>
